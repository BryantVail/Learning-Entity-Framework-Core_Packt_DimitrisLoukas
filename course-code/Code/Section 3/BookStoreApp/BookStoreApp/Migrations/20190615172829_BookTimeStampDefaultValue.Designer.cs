// <auto-generated />
using BookStoreApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace BookStoreApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190615172829_BookTimeStampDefaultValue")]
    partial class BookTimeStampDefaultValue
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BookStoreApp.Models.Author", b =>
                {
                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("MiddleName");

                    b.Property<string>("Nationality");

                    b.HasKey("FirstName", "LastName", "DateOfBirth");

                    b.ToTable("Author");
                });

            modelBuilder.Entity("BookStoreApp.Models.Book", b =>
                {
                    b.Property<int>("BookIdentifier")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Author");

                    b.Property<DateTime>("CreatedTimeStamp")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new DateTime(2019, 6, 15, 13, 28, 29, 251, DateTimeKind.Local));

                    b.Property<string>("Isbn")
                        .HasMaxLength(10);

                    b.Property<string>("Title")
                        .HasMaxLength(32);

                    b.HasKey("BookIdentifier");

                    b.HasIndex("Isbn")
                        .IsUnique()
                        .HasName("IsbnIndex")
                        .HasFilter("[Isbn] IS NOT NULL");

                    b.ToTable("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
